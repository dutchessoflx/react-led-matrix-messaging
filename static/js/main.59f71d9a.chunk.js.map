{"version":3,"sources":["reportWebVitals.js","components/MessageHistory.js","components/Home.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MessageHistory","props","useState","messages","setMessages","useEffect","axios","get","res","data","catch","console","warn","lastMessage","id","isStriped","Head","Row","HeadCell","color","textAlign","Body","map","message","Cell","message_content","Date","created_at","toLocaleString","Home","setMessage","setLastMessage","breakpoint","marginTop","borderRadius","alignY","backgroundColor","padding","onSubmit","ev","preventDefault","log","post","marginBottom","onChange","target","value","alignX","label","placeholder","theme","global","fontSize","styles","base","css","ReactDOM","render","StrictMode","header","document","getElementById"],"mappings":"8MAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,yCCoECQ,G,OAlEQ,SAACC,GAAU,IAAD,EAECC,mBAAS,IAFV,mBAExBC,EAFwB,KAEdC,EAFc,KA8B3B,OAfJC,qBAAW,WATTC,IAAMC,IATmB,0CAUxBb,MAAK,SAACc,GAELJ,EAAYI,EAAIC,SAGjBC,MAAMC,QAAQC,QAMd,IAEHP,qBAAW,WAETD,EAAY,CAACH,EAAMY,aAAR,mBAAwBV,OAClC,CAACF,EAAMY,cAQF,8BACE,sBAAKC,GAAG,UAAR,UACI,iDACJ,eAAC,IAAD,CAAOC,WAAS,EAAhB,UACI,cAAC,IAAMC,KAAP,UACE,eAAC,IAAMC,IAAP,WACE,cAAC,IAAMC,SAAP,CAAgBC,MAAM,QAAtB,8BACA,cAAC,IAAMD,SAAP,CAAgBC,MAAM,QAAQC,UAAU,QAAxC,kCAGR,cAAC,IAAMC,KAAP,UAGQlB,EAASmB,KAAI,SAAAC,GAAO,OAClB,eAAC,IAAMN,IAAP,WACE,cAAC,IAAMO,KAAP,CAAYL,MAAM,QAAlB,SACGI,EAAQE,iBADoBF,EAAQE,iBAGvC,cAAC,IAAMD,KAAP,CAAYL,MAAM,QAAiCC,UAAU,QAA7D,SACG,IAAIM,KAAKH,EAAQI,YAAYC,kBADDL,EAAQI,8BCehDE,G,OA7DF,SAAC5B,GAAW,IAAD,EACUC,mBAAS,IADnB,mBACbqB,EADa,KACJO,EADI,OAEkB5B,mBAAS,IAF3B,mBAEbW,EAFa,KAEAkB,EAFA,KA+BlB,OACE,gCACA,cAAC,IAAD,CAAWC,WAAW,SAASC,UAAU,UAAzC,SACE,cAAC,IAAD,CAAKC,aAAa,OAAOC,OAAO,SAASC,gBAAgB,2BAA2BC,QAAQ,OAA5F,SACE,uBAAMC,SAzBO,SAACC,GACpBA,EAAGC,iBACH7B,QAAQ8B,IAAI,UAAWlB,GAGR,KAAZA,EAKHjB,IAAMoC,KAzBiB,yCAyBS,CAACjB,gBAAiBF,IAC/C7B,MAAK,SAACc,GAILuB,EAAevB,EAAIC,SAEpBC,MAAMC,QAAQC,MAXfD,QAAQ8B,IAAI,oBAmBR,UACE,cAAC,IAAD,CAAOE,aAAa,OAClBC,SAjCS,SAACL,GAEpBT,EAAWS,EAAGM,OAAOC,QAgCXC,OAAO,SACPb,aAAa,OACbc,MAAM,kBACNZ,gBAAgB,2BAChBa,YAAY,+BACd,wBAAQnC,GAAG,OAAX,oDAON,cAAC,IAAD,UACE,cAAC,EAAD,CAAgBD,YAAaA,W,urBCxDvC,IAAMqC,EAAQ,CACZC,OAAQ,CACNC,SAAU,GACVC,OAAQ,CACNC,KAAMC,YAAF,QA4BVC,IAASC,OACP,cAAC,IAAD,CAAgBP,MAAOA,EAAvB,SACA,cAAC,IAAMQ,WAAP,UACA,cAAC,IAAD,CACIC,OAAS,uDADb,SAEI,cAAC,EAAD,UAKJC,SAASC,eAAe,SAO1BtE,K","file":"static/js/main.59f71d9a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { Table } from 'bumbag'\nimport Time from 'react-time-format'\n// import Home from './Home';\n// const RAILS_LEDMATRIX_BASE = 'http://localhost:3000/messages'\nconst RAILS_LEDMATRIX_BASE = 'https://647ba0d71fed.ngrok.io/messages'\n\n\nconst MessageHistory = (props)=> {\n\n  const [messages, setMessages] = useState([]);\n\n  const fetchMessages = () => {\n    // console.log('fetchMessages');\n    axios.get(RAILS_LEDMATRIX_BASE)\n    .then((res) => {\n      // console.log('response', res.data);\n      setMessages(res.data)\n\n    })\n    .catch(console.warn);\n  };\n\n  useEffect( () => {\n    // console.log(\"History Component Mounted\");\n    fetchMessages();\n  }, []);\n\n  useEffect( () => {\n    // console.log(\"Last message\", props.lastMessage);\n    setMessages([props.lastMessage, ...messages])\n  }, [props.lastMessage]);\n\n\n\n\n\n\n      return (\n          <div >\n            <div id='history'>\n                <h4>Message History</h4>\n            <Table isStriped>\n                <Table.Head>\n                  <Table.Row >\n                    <Table.HeadCell color=\"black\">Message Contents</Table.HeadCell>\n                    <Table.HeadCell color=\"black\" textAlign=\"right\"> Date/Time Sent</Table.HeadCell>\n                  </Table.Row>\n                </Table.Head>\n            <Table.Body>\n\n                  {\n                    messages.map(message =>\n                      <Table.Row>\n                        <Table.Cell color=\"black\" key={message.message_content}>\n                          {message.message_content}\n                        </Table.Cell>\n                        <Table.Cell color=\"black\" key={message.created_at} textAlign=\"right\">\n                          {new Date(message.created_at).toLocaleString()}\n                        </Table.Cell>\n                      </Table.Row>)\n\n                  }\n\n            </Table.Body>\n          </Table>\n          </div>\n        </div>\n\n        );\n\n\n}///class\n\nexport default MessageHistory;\n","import React, {useState} from 'react';\nimport MessageHistory from './MessageHistory';\nimport axios from 'axios';\nimport {  Box,Container,PageContent,Button, Input } from 'bumbag';\nimport '../App.css';\n\n// const RAILS_LEDMATRIX_BASE = 'http://localhost:3000/messages'\nconst RAILS_LEDMATRIX_BASE = 'https://647ba0d71fed.ngrok.io/messages'\n\n\n\n\nconst Home = (props) => {\n    const [message, setMessage] = useState('');\n    const [lastMessage, setLastMessage] = useState('');\n\n    const handleChange = (ev) => {\n      // console.log('message', ev.target.value);\n      setMessage(ev.target.value);\n      // console.log(message);\n    }\n\n    const handleSubmit = (ev) =>{\n      ev.preventDefault();\n      console.log(\"message\", message);\n\n\n      if(message === ''){\n        console.log(\"message is null\");\n        return\n      }\n      // console.log(\"message\", message);\n      axios.post(RAILS_LEDMATRIX_BASE,{message_content: message})\n        .then((res) =>{\n          // console.log(res.data);\n          // console.log(res.data.message_content);\n\n          setLastMessage(res.data);\n        })\n        .catch(console.warn);\n\n      }\n\n      return (\n        <div>\n        <Container breakpoint=\"mobile\" marginTop=\"major-2\">\n          <Box borderRadius=\"20px\" alignY=\"center\" backgroundColor=\"rgba(46, 120, 125, 0.67)\" padding=\"1rem\">\n            <form onSubmit={handleSubmit}>\n              <Input marginBottom=\"10px\"\n                onChange={handleChange}\n                alignX=\"center\"\n                borderRadius=\"20px\"\n                label=\"Write a Message\"\n                backgroundColor=\"rgba(46, 120, 125, 0.67)\"\n                placeholder=\"Enter your message here...\" />\n              <button id='post'>\n                Send your Message to the Matrix\n              </button>\n            </form>\n\n          </Box>\n        </Container>\n        <PageContent>\n          <MessageHistory lastMessage={lastMessage}/>\n        </PageContent>\n\n\n        </div>\n      );\n\n};\n\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Home from './components/Home';\nimport { PageWithHeader, Provider as BumbagProvider, css } from 'bumbag';\n\nconst theme = {\n  global: {\n    fontSize: 20,\n    styles: {\n      base: css`\n        html,\n        body {\n          background-color: rgba(100, 46, 125, 0.7);\n          color: white;\n          font-family: 'LED Dot' !important;\n          src: local('LED Dot'), url('./fonts/LED Dot-Matrix.ttf')format('truetype');\n        }\n        h2{\n          background-color: rgba(100, 46, 125, 0.7);\n\n        }\n      #post{\n        background-color: white;\n        color: rgba(46, 120, 125, 0.81);\n      }\n      #history{\n        text-align: center;\n        color: black;\n        background-color: rgba(46, 120, 125, 0.81);\n        padding: 10px;\n        border-radius: 20px;\n      }\n      `\n    }\n  }\n}\n\nReactDOM.render(\n  <BumbagProvider theme={theme}>\n  <React.StrictMode>\n  <PageWithHeader\n      header={ <h2>LED Messaging Service</h2>}>\n      <Home/>\n    </PageWithHeader>\n\n  </React.StrictMode>\n</BumbagProvider>,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}