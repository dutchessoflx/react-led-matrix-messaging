[{"/Users/Brooke/SEI/projects/project03/react-led-matrix/src/index.js":"1","/Users/Brooke/SEI/projects/project03/react-led-matrix/src/App.js":"2","/Users/Brooke/SEI/projects/project03/react-led-matrix/src/reportWebVitals.js":"3","/Users/Brooke/SEI/projects/project03/react-led-matrix/src/components/Home.js":"4","/Users/Brooke/SEI/projects/project03/react-led-matrix/src/components/MessageHistory.js":"5"},{"size":1212,"mtime":1612429780117,"results":"6","hashOfConfig":"7"},{"size":319,"mtime":1612241060947,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612229332812,"results":"9","hashOfConfig":"7"},{"size":2449,"mtime":1612430249110,"results":"10","hashOfConfig":"7"},{"size":2073,"mtime":1612427961215,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1qqcxca",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},"/Users/Brooke/SEI/projects/project03/react-led-matrix/src/index.js",["24"],"/Users/Brooke/SEI/projects/project03/react-led-matrix/src/App.js",["25"],"/Users/Brooke/SEI/projects/project03/react-led-matrix/src/reportWebVitals.js",[],["26","27"],"/Users/Brooke/SEI/projects/project03/react-led-matrix/src/components/Home.js",["28"],"/Users/Brooke/SEI/projects/project03/react-led-matrix/src/components/MessageHistory.js",["29","30"],"import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { Table } from 'bumbag'\nimport Time from 'react-time-format'\n// import Home from './Home';\nconst RAILS_LEDMATRIX_BASE = 'http://localhost:3000/messages'\n// const RAILS_LEDMATRIX_BASE = 'https://1b750caa58c7.ngrok.io/messages'\n// - will change with reboot of ngrok server\n\n\nconst MessageHistory = (props)=> {\n\n  const [messages, setMessages] = useState([]);\n\n  const fetchMessages = () => {\n    // console.log('fetchMessages');\n    axios.get(RAILS_LEDMATRIX_BASE)\n    .then((res) => {\n      // console.log('response', res.data);\n      setMessages(res.data)\n\n    })\n    .catch(console.warn);\n  };\n\n  useEffect( () => {\n    // console.log(\"History Component Mounted\");\n    fetchMessages();\n  }, []);\n\n  useEffect( () => {\n    // console.log(\"Last message\", props.lastMessage);\n    setMessages([props.lastMessage, ...messages])\n  }, [props.lastMessage]);\n\n\n\n\n\n\n      return (\n          <div >\n            <div id='history'>\n                <h4>Message History</h4>\n            <Table isStriped>\n                <Table.Head>\n                  <Table.Row >\n                    <Table.HeadCell color=\"black\">Message Contents</Table.HeadCell>\n                    <Table.HeadCell color=\"black\" textAlign=\"right\"> Date/Time Sent</Table.HeadCell>\n                  </Table.Row>\n                </Table.Head>\n            <Table.Body>\n\n                  {\n                    messages.map(message =>\n                      <Table.Row>\n                        <Table.Cell color=\"black\" key={message.message_content}>\n                          {message.message_content}\n                        </Table.Cell>\n                        <Table.Cell color=\"black\" key={message.created_at} textAlign=\"right\">\n                          {new Date(message.created_at).toLocaleString()}\n                        </Table.Cell>\n                      </Table.Row>)\n\n                  }\n\n            </Table.Body>\n          </Table>\n          </div>\n        </div>\n\n        );\n\n\n}///class\n\nexport default MessageHistory;\n",{"ruleId":"31","severity":1,"message":"32","line":6,"column":10,"nodeType":"33","messageId":"34","endLine":6,"endColumn":24},{"ruleId":"31","severity":1,"message":"35","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"31","severity":1,"message":"40","line":4,"column":43,"nodeType":"33","messageId":"34","endLine":4,"endColumn":49},{"ruleId":"31","severity":1,"message":"41","line":4,"column":8,"nodeType":"33","messageId":"34","endLine":4,"endColumn":12},{"ruleId":"42","severity":1,"message":"43","line":34,"column":6,"nodeType":"44","endLine":34,"endColumn":25,"suggestions":"45"},"no-unused-vars","'PageWithHeader' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","no-native-reassign",["46"],"no-negated-in-lhs",["47"],"'Button' is defined but never used.","'Time' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.","ArrayExpression",["48"],"no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [messages, props.lastMessage]",{"range":"51","text":"52"},[913,932],"[messages, props.lastMessage]"]